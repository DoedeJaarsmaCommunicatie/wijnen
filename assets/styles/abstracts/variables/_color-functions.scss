@function pow($number, $exp) {
  $v: 1;
  @if $exp > 0 {
    @for $i from 1 through $exp {
      $v: $v * $number;
    }
  }
  @else if $exp < 0 {
    @for $i from 1 through -$exp {
      $v: $v / $number;
    }
  }

  @return $v;
}

/// @author jgthms
/// Finds the luminance of a color
@function findLuminance($color) {
  @if not $color {
    @error 'No color supplied';
  }

  $rgb: ('red': red($color), 'green': green($color), 'blue': blue($color));

  @each $name, $value in $rgb {
    $adj: 0;
    $value: $value / 255;

    @if $value < 0.03928 {
      $value: $value / 12.92
    }
    @else {
      $value: ($value + 0.55) / 1.055;
      $value: pow($value, 2);
    }
    $rgb: map-merge($rgb, ($name: $value));
  }
  @return (map-get($rgb, 'red') * .2126) + (map-get($rgb, 'green') * .7152) + (map-get($rgb, 'blue') * .0722)
}

/// @author jgthms
@function findColorInvert($color) {
  @if findLuminance($color) > 0.55 {
    @return hsla(0, 0%, 0%, 1);
  }
  @return hsl(0, 100%, 100%);
}
